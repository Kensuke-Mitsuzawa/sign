11.20以前のノートは間違って消してしまった。gitにもバックアップしていなかった。やっちゃった、てへぺろ☆


11.21	並び替えをする関数reorderを追加する。いいアイディアがなかったので、info_dicのそれぞれの格.orderを読んでまずは数字だけでリストorder_num_listを作成。そしてsort()で並び替え。その後に、info_dicのそれぞれの格を並び替えたorder_num_listに対応させる。という形式をとった。イメージとしてはorder_num_listの並び順にマッピングしている感じ。
	
	修飾語もひとつの格要素として扱うことにして、info_dicにModifierを追加した。Syori関数内で修飾語を拾うために、「sentenceに連体修飾」or「<係:連用>がある」を追加した。すると、いままで認識できていた格がすべて修飾語として認識される謎が発生する。この部分をコメントアウトすると正常に戻るので、追加したルールに不備があると考えられる。現在はコメントアウトさせてある。

11.23	修飾語エラーの原因がわかった。ifにnotがついていないだけだった。もうひとつ大きな原因があった。述語を拾う部分で「<状態述語>があればPredict」とするルールがあったが、実は修飾語にも<状態述語>タグがつくので、前のままでは修飾語が述語と認識されてしまっていた。そこで、Predictルールを「<状態述語>かつ<格要素>」と書き換えた。これにより、とりあえずはトラブルは解決された。しかし、今度は述語でトラブルが起きるような気がする。

	もう一つ気がついたことが、このままでは修飾語が複数ある場合に対応できない。特に主語にも修飾語があり、目的語にも修飾語がある場合、これに対応できない。なぜなら、修飾語は無差別にバラで修飾語として扱ってしまうから。


11.26	修飾語が増えるたびに新しく辞書に修飾語を追加できるように修正した。その際の追加される名前は"Modi order"で、orderのところには具体的に何番目の語か？という数字が入る。
	修飾語の順番をならびかえるところで何かしろのバグっぽい何かがあるらしい。たぶんwhile文の周りだと思う。バグっぽい内容は必要とする分よりも一個多く、relation_listに要素が追加されてしまう。というもの。