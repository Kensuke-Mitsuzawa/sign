11.20以前のノートは間違って消してしまった。gitにもバックアップしていなかった。やっちゃった、てへぺろ☆


11.21	並び替えをする関数reorderを追加する。いいアイディアがなかったので、info_dicのそれぞれの格.orderを読んでまずは数字だけでリストorder_num_listを作成。そしてsort()で並び替え。その後に、info_dicのそれぞれの格を並び替えたorder_num_listに対応させる。という形式をとった。イメージとしてはorder_num_listの並び順にマッピングしている感じ。
	
	修飾語もひとつの格要素として扱うことにして、info_dicにModifierを追加した。Syori関数内で修飾語を拾うために、「sentenceに連体修飾」or「<係:連用>がある」を追加した。すると、いままで認識できていた格がすべて修飾語として認識される謎が発生する。この部分をコメントアウトすると正常に戻るので、追加したルールに不備があると考えられる。現在はコメントアウトさせてある。

11.23	修飾語エラーの原因がわかった。ifにnotがついていないだけだった。もうひとつ大きな原因があった。述語を拾う部分で「<状態述語>があればPredict」とするルールがあったが、実は修飾語にも<状態述語>タグがつくので、前のままでは修飾語が述語と認識されてしまっていた。そこで、Predictルールを「<状態述語>かつ<格要素>」と書き換えた。これにより、とりあえずはトラブルは解決された。しかし、今度は述語でトラブルが起きるような気がする。

	もう一つ気がついたことが、このままでは修飾語が複数ある場合に対応できない。特に主語にも修飾語があり、目的語にも修飾語がある場合、これに対応できない。なぜなら、修飾語は無差別にバラで修飾語として扱ってしまうから。


11.26	修飾語が増えるたびに新しく辞書に修飾語を追加できるように修正した。その際の追加される名前は"Modi order"で、orderのところには具体的に何番目の語か？という数字が入る。
	修飾語の順番をならびかえるところで何かしろのバグっぽい何かがあるらしい。たぶんwhile文の周りだと思う。バグっぽい内容は必要とする分よりも一個多く、relation_listに要素が追加されてしまう。というもの。

12.24



現状の make_sentence関数は単純にメイン格　二格　述語→文
のように格に対するルールしか定義していない。
しかし、これでいいような気もする。
日本語の考えられる格パターンを記述することは不可能だろうか？
また、日本語の頻出格パターンの情報とかないだろうか？
これについて誰かに聞いてみること。

   * reorder関数は修飾語のみを入れ替えるように努力している。
   * 
      * 例えば「私　名前　加藤」が「私　加藤　名前」になってしまっている。品詞の並び的には「メイン　修飾　述語」に対して「修飾　メイン　述語」になっている。
      * 
         * 該当しているのはl293。ここはinfo_dicに入っている情報を適当に出力しているだけだから問題ない。
         * ややこしいのでl293 printをコメントアウト
      * l311 ~ l329　で何か並び替え処理をしようとしているような気がする。.posインスタンスがokになっているのはどういう時？
      * 
         * その単語が修飾語と判断された時。つまりl314は修飾語のみに対して処理を行おうとしている。
   * 構文情報の拾い方をちょっと変更
   * 
      * 疑問文でも受け身文でもないとき→平叙文とされる
現状、解決すべき問題は３点
   * もしも〜　if文の時の処理の記述
   * 出力される単語並びのpt()を対象の人称に一致させる
   * 修飾語の並び替え処理を完成させる


12.31	述語と格の関係のみを抽出するスクリプトのcase_analysis.pyを作成。ただ、現状ではミスがある。KNPの述語と格の関係の出力は常に同じフォーマットではない。なので、格解析の結果が出てくる場所は常に変化する。いまのコードでは、いつも解析格が同じ場所に出てくる前提なので、書き直す必要あり。また、KNPが出力する格の種類は何種類あるのか？も確認する必要がある。